trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: build_and_test
    jobs:
      - job: build
        displayName: Build
        steps:
          # Install dotnet
          - task: UseDotNet@2
            displayName: Install .NET 8
            inputs:
              packageType: sdk
              version: 8.x
              installationPath: $(Agent.ToolsDirectory)/dotnet
          
          # Check out repository
          - checkout: self
            displayName: Check out repository
            fetchDepth: 0

          # Generate semver
          - script: |
              dotnet tool install --tool-path $(Agent.TempDirectory) nbgv
              $(Agent.TempDirectory)/nbgv cloud --all-vars --project $(Build.SourcesDirectory)      
            displayName: Generate semver
          
          # Restore NuGet packages
          - script: |
              cd $(Build.SourcesDirectory)/src
              dotnet restore /p:Version=$(NBGV_SEMVER2)      
            displayName: Restore packages
          
          # Build - debug
          - script: |
              cd $(Build.SourcesDirectory)/src
              dotnet build --configuration Debug --no-restore /p:Version=$(NBGV_SEMVER2)      
            displayName: Build - debug

          # Build - release
          - script: |
              cd $(Build.SourcesDirectory)/src
              dotnet build --configuration Release --no-restore /p:Version=$(NBGV_SEMVER2)      
            displayName: Build - release

          # Build client app
          - script: |
              cd $($Build.SourcesDirectory)/src/tanbyiot.client
              npm install
              npm run build
            displayName: Build client app

    - job: run_tests
      displayName: Run tests
        steps:
          - script: |
              cd $(Build.SourcesDirectory)/src
              dotnet test --configuration Debug --no-build
            displayName: Run tests

  - stage: publish_artifacts
    jobs:
      - job: publish
        displayName: Publish build artifacts
        steps:
          - publish: $(Build.SourcesDirectory)/tanbyiot.Server/bin/Release/net8.0/publish/
            artifact: drop-api
          - publish: $(Build.SourcesDirectory)/Functions/bin/Release/net8.0/publish/
            artifact: drop-function
          - publish: $(Build.SourcesDirectory)/Migrations/bin/Release/net8.0/publish/
            artifact: drop-migrations
          - publish: $(Build.SourcesDirectory)/tanbyiot.client/dist/
            artifact: drop-client

